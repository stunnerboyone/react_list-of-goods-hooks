{"version":3,"sources":["App.tsx","components/GoodsItem/GoodsItem.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsItem","good","GoodsList","goods","className","map","goodsFromServer","App","useState","DEFAULT","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goodsList","preparedGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","getPreparedGoods","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAoBKA,E,0ECdQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxC,oBAAI,UAAQ,OAAZ,SAAoBA,KCCTC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,WAAd,SACGD,EAAME,KAAI,SAAAJ,GAAI,OACb,cAAC,EAAD,CAAsBA,KAAMA,GAAZA,SFJTK,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGP,K,WAAAA,E,oBAAAA,E,iBAAAA,M,KAiCE,IAAMQ,EAAgB,WAC3B,MAAkCC,mBAAST,EAASU,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA/BR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAWC,GAC7B,OAAQT,GACN,KAAKX,EAASqB,SACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKpB,EAASuB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAKRX,EACHI,EAAcQ,UACdR,EAOiBS,CACnBnB,EACAI,EACAE,GAQF,OACE,sBAAKR,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEsB,KAAK,SACLtB,UAAWuB,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcX,EAASqB,WAErCQ,QAAS,kBAAMjB,EAAaZ,EAASqB,WALvC,iCAUA,wBACEM,KAAK,SACLtB,UAAWuB,IAAG,oBAAqB,CACjC,WAAYjB,IAAcX,EAASuB,SAErCM,QAAS,kBAAMjB,EAAaZ,EAASuB,SALvC,4BAUA,wBACEI,KAAK,SACLtB,UAAWuB,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAeD,IALhC,sBAUEF,GAAaE,IACb,wBACEc,KAAK,SACLtB,UAAU,4BACVwB,QA1CO,WACfjB,EAAaZ,EAASU,SACtBI,GAAc,IAqCR,sBAUJ,cAAC,EAAD,CAAWV,MAAOW,QG7GxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cea5907b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  DEFAULT = '',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\nfunction getPreparedGoods(\n  goodsList: string[],\n  sortField: SortType,\n  isReversed: boolean,\n): string[] {\n  const preparedGoods = [...goodsList];\n\n  if (sortField) {\n    preparedGoods.sort((firstGood, secondGood) => {\n      switch (sortField) {\n        case SortType.ALPHABET:\n          return firstGood.localeCompare(secondGood);\n\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed\n    ? preparedGoods.reverse()\n    : preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortType.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    sortField,\n    isReversed,\n  );\n\n  const resetAll = () => {\n    setSortField(SortType.DEFAULT);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.ALPHABET,\n          })}\n          onClick={() => setSortField(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.LENGTH,\n          })}\n          onClick={() => setSortField(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetAll}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  good: string,\n};\n\nexport const GoodsItem: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import React from 'react';\n\nimport { GoodsItem } from '../GoodsItem';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"Goodsist\">\n    {goods.map(good => (\n      <GoodsItem key={good} good={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}